# Homelab Docker Compose - Servicios principales para RPI5
# Configuración de IP dinámica durante la instalación
# Todos los puertos están verificados para evitar conflictos

services:
  # Portainer - Docker container management
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /mnt/nvme/portainer:/data
    networks:
      - homelab-network
    environment:
      - PORTAINER_EDITION=ce
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.rule=Host(`portainer.${DOMAIN}`)"
      - "traefik.http.routers.portainer.tls=true"
      - "traefik.http.routers.portainer.tls.certresolver=letsencrypt"

  # Immich v2.1.0 - Photo and video management
  immich-server:
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
    container_name: immich_server
    restart: unless-stopped
    ports:
      - "2283:2283"
    volumes:
      - /mnt/nvme/immich/upload:/data
      - /etc/localtime:/etc/localtime:ro
    networks:
      - homelab-network
    environment:
      - NODE_ENV=production
      - IMMICH_WEB_URL=http://immich.${DOMAIN}
      - IMMICH_SERVER_URL=http://immich.${DOMAIN}/api
      - DATABASE_HOSTNAME=immich_postgres
      - DATABASE_USERNAME=${IMMICH_DB_USERNAME}
      - DATABASE_PASSWORD=${IMMICH_DB_PASSWORD}
      - DATABASE_DBNAME=${IMMICH_DB_DATABASE_NAME}
      - REDIS_HOSTNAME=immich_redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${IMMICH_REDIS_PASSWORD}
      - DB_HOSTNAME=immich_postgres
      - DB_USERNAME=${IMMICH_DB_USERNAME}
      - DB_PASSWORD=${IMMICH_DB_PASSWORD}
      - DB_DATABASE_NAME=${IMMICH_DB_DATABASE_NAME}
      - TZ=${TIMEZONE}
    depends_on:
      - immich_postgres
      - immich_redis
    healthcheck:
      disable: false
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.immich.rule=Host(`immich.${DOMAIN}`)"
      - "traefik.http.routers.immich.tls=true"
      - "traefik.http.routers.immich.tls.certresolver=letsencrypt"

  immich-machine-learning:
    image: ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION:-release}
    container_name: immich_machine_learning
    restart: unless-stopped
    volumes:
      - immich_model_cache:/cache
    networks:
      - homelab-network
    environment:
      - NODE_ENV=production
      - DATABASE_HOSTNAME=immich_postgres
      - DATABASE_USERNAME=${IMMICH_DB_USERNAME}
      - DATABASE_PASSWORD=${IMMICH_DB_PASSWORD}
      - DATABASE_DBNAME=${IMMICH_DB_DATABASE_NAME}
      - REDIS_HOSTNAME=immich_redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${IMMICH_REDIS_PASSWORD}
      - TZ=${TIMEZONE}
    depends_on:
      - immich_postgres
      - immich_redis
    healthcheck:
      disable: false

  immich_postgres:
    image: ghcr.io/immich-app/postgres:14-vectorchord0.4.3-pgvectors0.2.0@sha256:bcf63357191b76a916ae5eb93464d65c07511da41e3bf7a8416db519b40b1c23
    container_name: immich_postgres
    restart: unless-stopped
    volumes:
      - /mnt/nvme/immich/postgres:/var/lib/postgresql/data
    networks:
      - homelab-network
    environment:
      - POSTGRES_PASSWORD=${IMMICH_DB_PASSWORD}
      - POSTGRES_USER=${IMMICH_DB_USERNAME}
      - POSTGRES_DB=${IMMICH_DB_DATABASE_NAME}
      - POSTGRES_INITDB_ARGS=--data-checksums
    shm_size: 128mb

  immich_redis:
    image: docker.io/valkey/valkey:8-bookworm@sha256:fea8b3e67b15729d4bb70589eb03367bab9ad1ee89c876f54327fc7c6e618571
    container_name: immich_redis
    restart: unless-stopped
    volumes:
      - /mnt/nvme/immich/redis:/data
    networks:
      - homelab-network
    environment:
      - REDIS_PASSWORD=${IMMICH_REDIS_PASSWORD}
    healthcheck:
      test: redis-cli ping || exit 1

  # Home Assistant - Home automation
  homeassistant:
    image: ghcr.io/home-assistant/home-assistant:stable
    container_name: homeassistant
    restart: unless-stopped
    ports:
      - "8123:8123"
    volumes:
      - /mnt/nvme/homeassistant:/config
      - /etc/localtime:/etc/localtime:ro
    networks:
      - homelab-network
    environment:
      - TZ=${TIMEZONE}
    privileged: true
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.homeassistant.rule=Host(`homeassistant.${DOMAIN}`)"
      - "traefik.http.routers.homeassistant.tls=true"
      - "traefik.http.routers.homeassistant.tls.certresolver=letsencrypt"

  # AdGuard Home - DNS ad blocker
  adguardhome:
    image: adguard/adguardhome:latest
    container_name: adguardhome
    restart: unless-stopped
    network_mode: host
    volumes:
      - /mnt/nvme/adguard/work:/opt/adguardhome/work
      - /mnt/nvme/adguard/conf:/opt/adguardhome/conf
    environment:
      - TZ=${TIMEZONE}
    cap_add:
      - NET_ADMIN
      - NET_BIND_SERVICE

  # Samba - File sharing
  samba:
    image: dperson/samba:latest
    container_name: samba
    restart: unless-stopped
    ports:
      - "139:139"
      - "445:445"
    volumes:
      - /mnt/nvme/samba/data:/data
      - /mnt/nvme/samba/config:/config
      - /mnt/nvme/media:/media:ro
    networks:
      - homelab-network
    environment:
      - TZ=${TIMEZONE}
      - USERID=${SAMBA_USERID}
      - GROUPID=${SAMBA_GROUPID}
      - USER=${SAMBA_USER}
      - PASSWORD=${SAMBA_PASSWORD}
      - SHARE=${SAMBA_SHARE}
    cap_add:
      - SYS_ADMIN

  # Nginx Proxy Manager - Reverse proxy and SSL
  nginx-proxy-manager:
    image: jc21/nginx-proxy-manager:latest
    container_name: nginx-proxy-manager
    restart: unless-stopped
    ports:
      - "80:80"
      - "81:81"
      - "443:443"
    volumes:
      - /mnt/nvme/npm/data:/data
      - /mnt/nvme/npm/letsencrypt:/etc/letsencrypt
    networks:
      - homelab-network
    environment:
      - DB_MYSQL_HOST=nginx-proxy-manager-db
      - DB_MYSQL_PORT=3306
      - DB_MYSQL_USER=npm
      - DB_MYSQL_PASSWORD=${NPM_DB_PASSWORD}
      - DB_MYSQL_NAME=npm
    depends_on:
      - nginx-proxy-manager-db

  # Database for Nginx Proxy Manager
  nginx-proxy-manager-db:
    image: mariadb:latest
    container_name: nginx-proxy-manager-db
    restart: unless-stopped
    volumes:
      - /mnt/nvme/npm/mysql:/var/lib/mysql
    networks:
      - homelab-network
    environment:
      - MYSQL_ROOT_PASSWORD=${NPM_DB_ROOT_PASSWORD}
      - MYSQL_DATABASE=npm
      - MYSQL_USER=npm
      - MYSQL_PASSWORD=${NPM_DB_PASSWORD}

  # Stremio with server
  stremio:
    image: tsaridas/stremio-docker:latest
    container_name: stremio
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - /mnt/nvme/stremio/config:/root/.stremio-server
    networks:
      - homelab-network
    environment:
      - NO_CORS=1
      - AUTO_SERVER_URL=1
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.stremio.rule=Host(`stremio.${DOMAIN}`)"
      - "traefik.http.routers.stremio.tls=true"
      - "traefik.http.routers.stremio.tls.certresolver=letsencrypt"

  # Transmission - BitTorrent client
  transmission:
    image: linuxserver/transmission:latest
    container_name: transmission
    restart: unless-stopped
    ports:
      - "9091:9091"
      - "51413:51413"
      - "51413:51413/udp"
    volumes:
      - /mnt/nvme/transmission/config:/config
      - /mnt/nvme/transmission/downloads:/downloads
      - /mnt/nvme/transmission/watch:/watch
    networks:
      - homelab-network
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - TRANSMISSION_WEB_HOME=/transmission-web-control/
      - USER=${TRANSMISSION_USER}
      - PASS=${TRANSMISSION_PASSWORD}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.transmission.rule=Host(`transmission.${DOMAIN}`)"
      - "traefik.http.routers.transmission.tls=true"
      - "traefik.http.routers.transmission.tls.certresolver=letsencrypt"

  # Watchtower - Actualización automática de contenedores
  watchtower:
    image: containrrr/watchtower:latest
    container_name: watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - homelab-network
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_POLL_INTERVAL=3600
      - WATCHTOWER_INCLUDE_STOPPED=true
      - WATCHTOWER_REVIVE_STOPPED=false
    command: --interval 3600

# Volúmenes para Immich
volumes:
  immich_model_cache:

# Red personalizada para homelab
networks:
  homelab-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
